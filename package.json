{
  "name": "Goobox",
  "version": "0.2.0",
  "description": "Goobox community edition sync app for sia and storj ðŸŽ‰ðŸš€",
  "main": "index.js",
  "scripts": {
    "start": "electron .",
    "start:installer": "electron . --installer",
    "build": "webpack",
    "build:watch": "webpack -w",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "npm test -- --coverage",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "check-update": "ncu -u",
    "pack": "electron-builder -wm --dir",
    "dist": "run-s dist:pre dist:build dist:post",
    "dist:build": "run-p dist:build:*",
    "dist:build:mac": "electron-builder -m --x64",
    "dist:build:win": "electron-builder -w --x64",
    "dist:pre": "run-p dist:pre:*:*",
    "dist:pre:storj:mac": "mkdir -p tmp/mac/goobox-sync-storj && curl -sSL https://github.com/GooBox/goobox-sync-storj/releases/download/${SYNC_STORJ_VERSION}/goobox-sync-storj-${SYNC_STORJ_VERSION}-darwin.tar.gz | tar -zxv -C tmp/mac/goobox-sync-storj --strip-components 1",
    "dist:pre:storj:win": "mkdir -p tmp/win/goobox-sync-storj && curl -sSL https://github.com/GooBox/goobox-sync-storj/releases/download/${SYNC_STORJ_VERSION}/goobox-sync-storj-${SYNC_STORJ_VERSION}-win64.zip -o tmp.zip && unzip tmp.zip -d tmp/win/ && rm tmp.zip",
    "dist:pre:sia:mac": "mkdir -p tmp/mac/goobox-sync-sia && curl -sSL https://github.com/GooBox/goobox-sync-sia/releases/download/v${SYNC_SIA_VERSION}/goobox-sync-sia-${SYNC_SIA_VERSION}-mac.tar.gz | tar -zxv -C tmp/mac/goobox-sync-sia --strip-components 1",
    "dist:pre:sia:win": "mkdir -p tmp/win/goobox-sync-sia && curl -sSL https://github.com/GooBox/goobox-sync-sia/releases/download/v${SYNC_SIA_VERSION}/goobox-sync-sia-${SYNC_SIA_VERSION}-win64.tar.gz | tar -zxv -C tmp/win/goobox-sync-sia --strip-components 1",
    "dist:post": "del tmp"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/GooBox/goobox-community-gui.git"
  },
  "author": "Goobox",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/GooBox/goobox-community-gui/issues"
  },
  "homepage": "https://github.com/GooBox/goobox-community-gui",
  "dependencies": {
    "about-window": "^1.11.0",
    "electron-json-storage": "^4.1.0",
    "node-jre": "jkawamoto/node-jre",
    "node-notifier": "^5.2.1"
  },
  "devDependencies": {
    "@babel/core": "^7.0.0-beta.46",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0-beta.46",
    "@babel/preset-env": "^7.0.0-beta.46",
    "@babel/preset-react": "^7.0.0-beta.46",
    "babel-core": "^7.0.0-0",
    "babel-jest": "^22.4.3",
    "babel-loader": "^8.0.0-beta.0",
    "babel-minify-webpack-plugin": "^0.3.1",
    "classnames": "^2.2.5",
    "commander": "^2.15.1",
    "coveralls": "^3.0.0",
    "del": "^3.0.0",
    "del-cli": "^1.1.0",
    "electron": "1.8.6",
    "electron-builder": "^20.10.0",
    "electron-log": "^2.2.14",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "history": "^4.7.2",
    "hoek": "^5.0.3",
    "jest": "^22.4.3",
    "js-yaml": "^3.11.0",
    "menubar": "^5.2.3",
    "npm-check-updates": "^2.14.2",
    "npm-run-all": "^4.1.2",
    "prop-types": "^15.6.1",
    "react": "^16.3.2",
    "react-dom": "^16.3.2",
    "react-redux": "^5.0.7",
    "react-router": "^4.2.0",
    "react-router-redux": "^5.0.0-alpha.9",
    "redux": "^4.0.0",
    "redux-actions": "^2.3.0",
    "redux-logger": "^3.0.6",
    "redux-mock-store": "^1.5.1",
    "redux-saga": "^0.16.0",
    "semver": "^5.5.0",
    "stream-to-string": "^1.1.0",
    "svg-url-loader": "^2.3.2",
    "webpack": "^4.6.0",
    "webpack-cli": "^2.0.15",
    "winston": "^3.0.0-rc2",
    "winston-papertrail": "^1.0.5"
  },
  "optionalDependencies": {
    "fileicon": "^0.2.2"
  },
  "babel": {
    "sourceMaps": "inline",
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current",
            "electron": "1.8.6"
          },
          "useBuiltIns": "usage"
        }
      ],
      "@babel/preset-react"
    ],
    "plugins": [
      "@babel/plugin-proposal-object-rest-spread"
    ]
  },
  "jest": {
    "setupFiles": [
      "raf/polyfill",
      "./setupTests.js"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/dist"
    ],
    "transform": {
      "^.+\\.jsx?$": "babel-jest"
    },
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js"
    }
  },
  "build": {
    "appId": "io.goobox.CommunityGUI",
    "directories": {
      "buildResources": ""
    },
    "files": [
      "!__mocks__",
      "!__tests__",
      "!coverage",
      "!Docs",
      "!node_modules/node-jre/jre",
      "!goobox-sync-*",
      "!src",
      "!tmp",
      "!vendor"
    ],
    "mac": {
      "category": "public.app-category.productivity",
      "icon": "resources/goobox.icns",
      "type": "development",
      "extraResources": [
        {
          "from": "tmp/mac/goobox-sync-storj",
          "to": "app/goobox-sync-storj"
        },
        {
          "from": "tmp/mac/goobox-sync-sia",
          "to": "app/goobox-sync-sia"
        },
        {
          "from": "vendor/mac",
          "to": "../PlugIns/"
        },
        {
          "from": "node_modules/fileicon/bin/fileicon",
          "to": "app/fileicon"
        }
      ]
    },
    "win": {
      "target": "nsis",
      "icon": "resources/goobox.ico",
      "extraResources": [
        {
          "from": "tmp/win/goobox-sync-storj",
          "to": "app/goobox-sync-storj"
        },
        {
          "from": "tmp/win/goobox-sync-sia",
          "to": "app/goobox-sync-sia"
        },
        {
          "from": "vendor/win",
          "to": "libraries",
          "filter": "*.dll"
        }
      ],
      "publisherName": "Goobox"
    },
    "asar": false,
    "asarUnpack": [
      "node_modules/node-jre",
      "node_modules/node-notifier"
    ],
    "nsis": {
      "perMachine": true,
      "installerIcon": "resources/goobox.ico",
      "uninstallerIcon": "resources/goobox.ico",
      "license": "LICENSE",
      "deleteAppDataOnUninstall": true,
      "artifactName": "${productName}-${version}-setup_x64.${ext}",
      "include": "vendor/win/installer.nsi"
    }
  }
}
